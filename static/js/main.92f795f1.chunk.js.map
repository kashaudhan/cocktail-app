{"version":3,"sources":["context.js","component/SearchForm.js","component/Loading.js","component/Cocktail.js","component/CocktailList.js","pages/Home.js","pages/About.js","pages/Error.js","logo.svg","component/Navbar.js","component/NetworkError.js","pages/SingleCocktail.js","App.js","index.js"],"names":["AppContext","React","createContext","AppProvider","children","useState","loading","setLoading","searchTerm","setSearchTerm","cocktail","setCocktail","fetchData","useCallback","a","fetch","response","json","data","drinks","newCocktail","map","drink","id","idDrink","name","strDrink","image","strDrinkThumb","info","strAlcoholic","glass","strGlass","console","log","useEffect","Provider","value","useGlobalContext","useContext","SearchForm","searchValue","useRef","current","focus","className","onSubmit","e","preventDefault","htmlFor","type","placeholder","ref","onChange","Cocktail","alt","src","to","CocktailList","item","Home","About","Error","Navbar","logo","SingleCocktail","useParams","networkError","setNetworkError","category","strCategory","instructions","strInstructions","strIngredient1","strIngredient2","strIngredient3","strIngredient4","strIngredient5","strIngredient6","ingredients","toString","getCocktail","index","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.92f795f1.chunk.js","sourcesContent":["import React, { useState, useContext, useCallback, useEffect } from \"react\";\r\nconst url = \"https://www.thecocktaildb.com/api/json/v1/1/search.php?s=\";\r\nconst AppContext = React.createContext();\r\n\r\nconst AppProvider = ({ children }) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [searchTerm, setSearchTerm] = useState(\"d\");\r\n  const [cocktail, setCocktail] = useState([]);\r\n\r\n  const fetchData = useCallback(async () => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await fetch(`${url}${searchTerm}`);\r\n      const data = await response.json();\r\n\r\n      const { drinks } = data;\r\n      if (drinks) {\r\n        const newCocktail = drinks.map((drink) => {\r\n          return {\r\n            id: drink.idDrink,\r\n            name: drink.strDrink,\r\n            image: drink.strDrinkThumb,\r\n            info: drink.strAlcoholic,\r\n            glass: drink.strGlass,\r\n          };\r\n        });\r\n        setCocktail(newCocktail);\r\n      }\r\n      setLoading(false);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }, [searchTerm]);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [searchTerm, fetchData]);\r\n\r\n  return (\r\n    <AppContext.Provider\r\n      value={{ loading, cocktail, searchTerm, setSearchTerm }}\r\n    >\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useGlobalContext = () => {\r\n  return useContext(AppContext);\r\n};\r\n\r\nexport { AppContext, AppProvider };\r\n","import React, { useRef, useEffect } from \"react\";\r\nimport { useGlobalContext } from \"../context\";\r\n\r\nexport default function SearchForm() {\r\n  const { setSearchTerm } = useGlobalContext();\r\n  const searchValue = useRef(\"\");\r\n\r\n  useEffect(() => {\r\n    searchValue.current.focus();\r\n  }, []);\r\n\r\n  const searchCocktail = () => {\r\n    setSearchTerm(searchValue.current.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <section className=\"section search\">\r\n      <form className=\"search-form\" onSubmit={handleSubmit}>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"name\">search your favourite cocktail</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            id=\"name\"\r\n            placeholder=\"e.g., chocolate\"\r\n            ref={searchValue}\r\n            onChange={searchCocktail}\r\n          />\r\n        </div>\r\n      </form>\r\n    </section>\r\n  );\r\n}\r\n","export default function loading() {\r\n  return (\r\n    <>\r\n      <div className=\"loader\"></div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nexport default function Cocktail({ image, name, id, info, glass }) {\r\n  return (\r\n    <article className=\"cocktail\">\r\n      <div className=\"img-container\">\r\n        <img alt={name} src={image} />\r\n      </div>\r\n      <div className=\"cocktail-footer\">\r\n        <h3>{name}</h3>\r\n        <h4>{glass}</h4>\r\n        <p>{info}</p>\r\n        <Link to={`/cocktail/${id}`} className=\"btn btn-primary btn-details\">\r\n          details\r\n        </Link>\r\n      </div>\r\n    </article>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Loading from \"./Loading\";\r\nimport Cocktail from \"../component/Cocktail\";\r\nimport { useGlobalContext } from \"../context\";\r\n\r\nexport default function CocktailList() {\r\n  const { cocktail, loading } = useGlobalContext();\r\n  if (loading) {\r\n    return <Loading />;\r\n  }\r\n\r\n  if (!cocktail)\r\n    return <h2 className=\"section-title\">no Cocktails to display</h2>;\r\n\r\n  return (\r\n    <section className=\"section\">\r\n      <h2 className=\"section-title\">cocktails</h2>\r\n      <div className=\"cocktail-center\">\r\n        {cocktail.map((item) => {\r\n          return <Cocktail key={item.id} {...item} />;\r\n        })}\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n","import SearchForm from \"../component/SearchForm\";\r\nimport CocktailList from \"../component/CocktailList\";\r\nexport default function Home() {\r\n  return (\r\n    <main>\r\n      <SearchForm />\r\n      <CocktailList />\r\n    </main>\r\n  );\r\n}\r\n","export default function About() {\r\n  return (\r\n    <section className=\"section about-section\">\r\n      <h1 className=\"section-title\">about us</h1>\r\n      <p>\r\n        Lorem ipsum dolor sit amet consectetur adipisicing elit. Molestiae\r\n        repudiandae architecto qui adipisci in officiis, aperiam sequi atque\r\n        perferendis eos, autem maiores nisi saepe quisquam hic odio consectetur\r\n        nobis veritatis quasi explicabo obcaecati doloremque? Placeat ratione\r\n        hic aspernatur error blanditiis?\r\n      </p>\r\n    </section>\r\n  );\r\n}\r\n","import { Link } from \"react-router-dom\";\r\n\r\nexport default function Error() {\r\n  return (\r\n    <section className=\"section error-page\">\r\n      <div className=\"error-container\">\r\n        <h1 className=\"section-title\">error...</h1>\r\n        <Link to=\"/\" className=\"btn btn-primary\">\r\n          back home\r\n        </Link>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/logo.7e62c9b5.svg\";","import React from \"react\";\r\nimport logo from \"../logo.svg\";\r\nimport { Link } from \"react-router-dom\";\r\nexport default function Navbar() {\r\n  return (\r\n    <nav className=\"navbar\">\r\n      <div className=\"nav-center\">\r\n        <Link to=\"/\">\r\n          <img alt=\"logo\" src={logo} className=\"logo\" />\r\n        </Link>\r\n      </div>\r\n      <ul className=\"nav-links\">\r\n        <li>\r\n          <Link to=\"/\">home</Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/about\">about</Link>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\n","export default function loading() {\r\n  return (\r\n    <div className=\"section-title\">Please check your network connection</div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\nimport Loading from \"../component/Loading\";\r\nimport NetworkError from \"../component/NetworkError\";\r\nexport default function SingleCocktail() {\r\n  const { id } = useParams();\r\n  const [loading, setLoading] = useState(false);\r\n  const [cocktail, setCocktail] = useState(null);\r\n  const [networkError, setNetworkError] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    const getCocktail = async () => {\r\n      try {\r\n        const response = await fetch(\r\n          `https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${id}`\r\n        );\r\n        const data = await response.json();\r\n        if (data) {\r\n          const {\r\n            strDrink: name,\r\n            strCategory: category,\r\n            strGlass: glass,\r\n            strDrinkThumb: image,\r\n            strAlcoholic: info,\r\n            strInstructions: instructions,\r\n            strIngredient1,\r\n            strIngredient2,\r\n            strIngredient3,\r\n            strIngredient4,\r\n            strIngredient5,\r\n            strIngredient6,\r\n          } = data.drinks[0];\r\n\r\n          const ingredients = [\r\n            strIngredient1,\r\n            strIngredient2,\r\n            strIngredient3,\r\n            strIngredient4,\r\n            strIngredient5,\r\n            strIngredient6,\r\n          ];\r\n\r\n          const newCocktail = {\r\n            name,\r\n            image,\r\n            category,\r\n            glass,\r\n            info,\r\n            instructions,\r\n            ingredients,\r\n          };\r\n          setCocktail(newCocktail);\r\n        } else {\r\n          setCocktail(null);\r\n        }\r\n      } catch (err) {\r\n        if (err.toString() === \"TypeError: Failed to fetch\") {\r\n          setNetworkError(true);\r\n        }\r\n        console.log(err);\r\n      }\r\n      setLoading(false);\r\n    };\r\n    getCocktail();\r\n  }, [id]);\r\n\r\n  if (loading) {\r\n    return <Loading />;\r\n  }\r\n  if (!cocktail && !networkError) {\r\n    return <h2 className=\"section-title\">no cocktails to display</h2>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {networkError ? (\r\n        <NetworkError />\r\n      ) : (\r\n        <section className=\"section cocktail-section\">\r\n          <Link to=\"/\" className=\"btn btn-primary\">\r\n            back home\r\n          </Link>\r\n          <h2 className=\"section-title\">{cocktail.name}</h2>\r\n          <div className=\"drink\">\r\n            <img alt={cocktail.name} src={cocktail.image} />\r\n            <div className=\"drink-info\">\r\n              <p>\r\n                <span className=\"drink-data\">name:&nbsp;</span>\r\n                {cocktail.name}\r\n              </p>\r\n              <p>\r\n                <span className=\"drink-data\">info:&nbsp;</span>\r\n                {cocktail.info}\r\n              </p>\r\n              <p>\r\n                <span className=\"drink-data\">glass:&nbsp;</span>\r\n                {cocktail.glass}\r\n              </p>\r\n              <p>\r\n                <span className=\"drink-data\">instructions:&nbsp;</span>\r\n                {cocktail.instructions}\r\n              </p>\r\n              <p>\r\n                <span className=\"drink-data\">ingredients:&nbsp;</span>\r\n                {cocktail.ingredients.map((item, index) => {\r\n                  return item ? (\r\n                    <span key={index}>{item}&nbsp;&nbsp;</span>\r\n                  ) : null;\r\n                })}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport About from \"./pages/About\";\nimport Error from \"./pages/Error\";\nimport Navbar from \"./component/Navbar\";\nimport SingleCocktail from \"./pages/SingleCocktail\";\nfunction App() {\n  return (\n    <Router>\n      <Navbar />\n      <Switch>\n        <Route exact path=\"/\">\n          <Home />\n        </Route>\n        <Route path=\"/about\">\n          <About />\n        </Route>\n        <Route path=\"/cocktail/:id\">\n          <SingleCocktail />\n        </Route>\n        <Route path=\"*\">\n          <Error />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { AppProvider } from \"./context\";\nReactDOM.render(\n  <React.StrictMode>\n    <AppProvider>\n      <App />\n    </AppProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}